@page "/Party/{partyID}"
@using ACS.Data
@using ACS.Helpers
@using ACS.ViewModels




<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="bill-heading">
            <h2>@_Title</h2>
            <hr />
        </div>
    </div>

</div>

<div class="row">
    <div class="col-md-6">

        <div class="form-group">
            <label>Party Name *</label>
            <input type="text" class="form-control" placeholder="Party Name" data-errors="Please Enter Name." required @bind-value=Model.PartyName>
            <div class="help-block with-errors"></div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label>Address *</label>
            <input type="text" class="form-control" placeholder="Address" data-errors="Please Enter Address." required @bind-value=Model.Address>
            <div class="help-block with-errors"></div>
        </div>

    </div>
  
</div>

<div class="row">
    <div class="col-md-6">

        <div class="form-group">
            <label>Contact *</label>
            <input type="text" class="form-control" placeholder="Contact" data-errors="Please Enter Contact." required @bind-value=Model.Contact>
            <div class="help-block with-errors"></div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label>Email *</label>
            <input type="text" class="form-control" placeholder="Email" data-errors="Please Enter Email." required @bind-value=Model.Email>
            <div class="help-block with-errors"></div>
        </div>

    </div>
  
</div>
<div class="row">
    <div class="col-md-12 text-right">
        <RadzenButton Click="@Create" Text="Save" Style="width: 120px" ButtonStyle="ButtonStyle.Secondary" />
        <RadzenButton Click="@((args) => dialogService.Close(null))" ButtonStyle="ButtonStyle.Danger" Text="Cancel" Style="width: 120px" Class="mr-1" />
    </div>
</div>


@inject PartyManagerService _service;

@inject Radzen.DialogService dialogService
@inject NotificationHelper NotifyHelper

@code {
    private string _Title = "Party";
    

    [Parameter] public string PartyID { get; set; }

    protected override void OnInitialized()
    {
        if (PartyID != "0")
        {
            Model = _service.GetById(Convert.ToInt32(PartyID));

            if (Model == null)
            {
                // Error Message
            }

        }
    }

    private PartyView Model = new PartyView();
    async Task Create()
    {
        try
        {
            if (PartyID != "0")
            {
                Model = await _service.UpdateParty(Model);
            }
            else
            {
                Model = await _service.AddParty(Model);
            }

            if (Model.PartyID != 0)
            {
                NotifyHelper.Message(NotificationSeverity.Success, _Title, $"{_Title} Successfully Added.");
                dialogService.Close(Model);
            }
            else
            {
                NotifyHelper.Message(NotificationSeverity.Error, _Title, $"Error While Saving {_Title}.");
            }
        }
        catch (Exception ex)
        {
            NotifyHelper.Message(NotificationSeverity.Error, _Title, $"Error While Saving {_Title}.");
        }

    }
}

