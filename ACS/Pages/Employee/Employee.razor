@using ACS.Data;
@using ACS.ViewModels;
@page "/Employee"
@inject EmployeeManagerService _service;
@inject Radzen.DialogService dialogService

@code {

    private EmployeeView employee = new EmployeeView();
    private List<EmployeeView> employees;

    protected override void OnInitialized()
    {
        employees = _service.GetAllEmployees();

    }
    async Task OpenAddNewEmployeeModel(int EmpID)
    {
        var emp = await dialogService.OpenAsync<AddEmployeeComponent>($"",
                new Dictionary<string, object>()
                            {
                     { "EmpID", EmpID + "" }
                            },
        new DialogOptions() { ShowTitle = false, Width = "700px", Resizable = true, Draggable = true });

        employees = _service.GetAllEmployees();
    }


    async Task DeleteEmployee(int id)
    {
        var resp = await dialogService.Confirm("are you sure you want to delete this Employee?", "Delete Employee", new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No" });
        if (resp == true)
        {
            if (await _service.DeleteEmployee(id))
            {
                employees.Remove(employees.FirstOrDefault(x => x.EmployeeID == id));
            }
        }
    }
}


<div class="content-page">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="d-flex flex-wrap flex-wrap align-items-center justify-content-between mb-4">
                    <div>
                        <h4 class="mb-3">Employees</h4>
                    </div>
                    <button @onclick="(async ()=> await OpenAddNewEmployeeModel(0))" class="btn btn-primary add-list"><i class="las la-plus mr-3"></i>Add Employee</button>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="table-responsive rounded mb-3">
                    <table class="data-table table mb-0 tbl-server-info">
                        <thead class="bg-white text-uppercase">
                            <tr class="ligth ligth-data">

                                <th>Employee No</th>
                                <th>Name</th>
                                <th>Contact</th>
                                <th>Employment</th>
                                <th>Status</th>
                                <th>Joining Date</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody class="ligth-body">

                            @if (employees?.Count > 0)
                            {
                                @foreach (var emp in employees)
                                {
                                    <tr>
                                        @{
                                            string employmentStatus = "Temporary";
                                            string Status = "In Active";
                                            if (emp.IsPermenant)
                                            {
                                                employmentStatus = "Permenant";
                                            }
                                            if (!emp.HasLeft)
                                            {
                                                Status = "Active";
                                            }
                                        }
                                        <td>@emp.EmployeeNo</td>
                                        <td>@emp.EmployeeName</td>
                                        <td>@emp.Contact</td>
                                        <td>@employmentStatus</td>
                                        <td>@Status</td>
                                        <td>@emp.CreatedDateTime.ToString("dd-MM-yyyy")</td>

                                        <td>
                                            <div class="d-flex align-items-center list-action">
                                                @*<a class="badge badge-info mr-2" data-toggle="tooltip" data-placement="top" title="" data-original-title="View" href="#"><i class="ri-eye-line mr-0"></i></a>*@
                                                <button class="badge bg-success mr-2" data-toggle="tooltip" data-placement="top" title="" data-original-title="Edit" @onclick="(async ()=> await OpenAddNewEmployeeModel(emp.EmployeeID))"><i class="ri-pencil-line mr-0"></i></button>
                                                <a class="badge bg-warning mr-2" data-toggle="tooltip" data-placement="top" title="" data-original-title="Delete" @onclick="() => DeleteEmployee(emp.EmployeeID)"><i class="ri-delete-bin-line mr-0"></i></a>
                                            </div>
                                        </td>

                                        @*<td><a class="btn btn-warning" href="/EditEmployee/@emp.EmployeeID">Edit</a></td>
                                <td><a class="btn btn-danger" @onclick="() => DeleteEmployee(emp.EmployeeID)">Delete</a></td>*@
                                    </tr>
                                }
                            }



                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- Page end  -->
    </div>
</div>